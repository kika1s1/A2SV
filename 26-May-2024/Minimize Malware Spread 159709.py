# Problem: Minimize Malware Spread - https://leetcode.com/problems/minimize-malware-spread/

from collections import defaultdict, deque

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        initial_set = set(initial)
        initial = sorted(initial)

        adj_list = defaultdict(list)
        for i in range(len(graph)):
            for j in range(len(graph[0])):
                if i != j and graph[i][j] == 1:
                    adj_list[i].append(j)
 
        def BFS(start):
            queue = deque([start])
            
            infected = set([start])
            infection_count = 1 

            while queue:
                infected_node = queue.popleft()

                for nei in adj_list[infected_node]:
                    if nei not in infected:
                        if nei in initial_set:
                            return -float('inf')
                         
                        infected.add(nei)
                        infection_count += 1
                        queue.append(nei)
            
            return infection_count
        
        Max = -float('inf')
        Min_idx = float('inf')

        for i in initial: 
            infected_count = BFS(i)
            if infected_count > Max:
                Max = infected_count
                Min_idx = i
        
        return Min_idx if Min_idx != float('inf') else initial[0]

    